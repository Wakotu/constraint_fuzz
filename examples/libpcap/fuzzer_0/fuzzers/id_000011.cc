#include "FDSan.h"
#include <pcap/pcap.h>
#include <pcap/can_socketcan.h>
#include <pcap/bluetooth.h>
#include <pcap/ipnet.h>
#include <pcap/usb.h>
#include <pcap/vlan.h>
#include <pcap/sll.h>
#include <pcap/nflog.h>
#include <stdlib.h>
#include <string.h>
#include <stdint.h>
#include <vector>
#include <fstream>
#include <iostream>
#include <sstream>
//<ID> 1071
//<Prompt> ["pcap_major_version","pcap_minor_version","bpf_dump","pcap_lookupnet","pcap_datalink_name_to_val","bpf_filter","pcap_offline_filter","pcap_set_immediate_mode","pcap_dump_ftell64"]
/*<Combination>: [int pcap_major_version(pcap_t * ),
    int pcap_minor_version(pcap_t * ),
    void bpf_dump(const struct bpf_program * , int ),
    int pcap_lookupnet(const char * , bpf_u_int32 * , bpf_u_int32 * , char * ),
    int pcap_datalink_name_to_val(const char * ),
    u_int bpf_filter(const struct bpf_insn * , const u_char * , u_int , u_int ),
    int pcap_offline_filter(const struct bpf_program * , const struct pcap_pkthdr * , const u_char * ),
    int pcap_set_immediate_mode(pcap_t * , int ),
    int64_t pcap_dump_ftell64(pcap_dumper_t * )
*/
//<score> 92, nr_unique_branch: 489
//<Quality> {"density":14,"unique_branches":{"pcap_offline_filter":[[4243,6,4243,19,0,0,4,1]],"and_pullup":[[1977,6,1977,13,0,0,4,0],[1977,6,1977,13,0,0,4,1],[1984,22,1984,29,0,0,4,0],[1984,22,1984,29,0,0,4,1],[1985,7,1985,35,0,0,4,0],[1985,7,1985,35,0,0,4,1],[1988,6,1988,32,0,0,4,0],[1988,6,1988,32,0,0,4,1],[1995,7,1995,18,0,0,4,1],[1998,7,1998,23,0,0,4,0],[1998,7,1998,23,0,0,4,1],[2001,7,2001,18,0,0,4,1],[2004,7,2004,35,0,0,4,0],[2004,7,2004,35,0,0,4,1],[2012,7,2012,18,0,0,4,1],[2015,7,2015,23,0,0,4,0]],"opt_root":[[2149,9,2149,43,0,0,4,0],[2149,9,2149,43,0,0,4,1],[2149,47,2149,59,0,0,4,0],[2149,47,2149,59,0,0,4,1],[2153,6,2153,14,0,0,4,0],[2153,6,2153,14,0,0,4,1],[2162,6,2162,40,0,0,4,0],[2162,6,2162,40,0,0,4,1]],"propedom":[[446,6,446,14,0,0,4,0],[446,6,446,14,0,0,4,1],[288,28,288,37,2,0,4,0],[288,28,288,37,2,0,4,1],[288,28,288,37,3,0,4,0],[288,28,288,37,3,0,4,1]],"opt_blks":[[2073,21,2073,27,0,0,4,0],[2073,21,2073,27,0,0,4,1],[2074,34,2074,35,0,0,4,0],[2074,34,2074,35,0,0,4,1],[2077,6,2077,14,0,0,4,0],[2077,6,2077,14,0,0,4,1],[2097,14,2097,27,0,0,4,0],[2097,14,2097,27,0,0,4,1],[2098,34,2098,35,0,0,4,0],[2098,34,2098,35,0,0,4,1],[2105,14,2105,27,0,0,4,0],[2105,14,2105,27,0,0,4,1],[2106,34,2106,35,0,0,4,0],[2106,34,2106,35,0,0,4,1]],"fold_edge":[[1606,6,1606,14,0,0,4,0],[1606,6,1606,14,0,0,4,1],[1627,6,1627,27,0,0,4,0],[1627,6,1627,27,0,0,4,1],[1642,6,1642,20,0,0,4,0],[1642,6,1642,20,0,0,4,1],[1645,6,1645,20,0,0,4,0],[1645,6,1645,20,0,0,4,1],[1652,10,1652,15,0,0,4,0],[1652,10,1652,15,0,0,4,1],[1654,6,1654,11,0,0,4,0],[1654,6,1654,11,0,0,4,1],[1654,15,1654,46,0,0,4,0]],"count_blocks":[[2437,6,2437,12,0,0,4,0],[2437,6,2437,12,0,0,4,1],[386,26,386,56,1,0,4,0],[386,26,386,56,1,0,4,1]],"F":[[722,37,722,38,0,0,4,0],[722,37,722,38,0,0,4,1],[723,7,723,22,0,0,4,0],[723,7,723,22,0,0,4,1],[723,26,723,37,0,0,4,0],[723,26,723,37,0,0,4,1],[723,41,723,52,0,0,4,0],[738,6,738,31,0,0,4,0],[738,6,738,31,0,0,4,1],[739,7,739,32,0,0,4,0],[739,7,739,32,0,0,4,1],[739,36,739,62,0,0,4,1]],"bpf_image":[[147,2,147,20,0,0,4,0],[229,2,229,13,0,0,4,0],[241,2,241,21,0,0,4,0],[259,2,259,28,0,0,4,0],[291,2,291,28,0,0,4,0],[341,2,341,28,0,0,4,0],[406,2,406,23,0,0,4,0]],"this_op":[[863,9,863,15,0,0,4,0],[863,9,863,15,0,0,4,1],[863,19,863,35,0,0,4,0],[863,19,863,35,0,0,4,1]],"pcap_major_version":[[3510,6,3510,19,0,0,4,1]],"atomdef":[[576,6,576,20,0,0,4,0],[576,6,576,20,0,0,4,1],[581,2,581,13,0,0,4,0],[581,2,581,13,0,0,4,1],[582,2,582,14,0,0,4,0],[582,2,582,14,0,0,4,1],[585,2,585,14,0,0,4,0],[585,2,585,14,0,0,4,1],[588,2,588,13,0,0,4,0],[588,2,588,13,0,0,4,1],[589,2,589,14,0,0,4,1],[592,2,592,15,0,0,4,0],[592,2,592,15,0,0,4,1],[593,10,593,40,0,0,4,0],[135,25,135,40,2,0,4,0],[135,25,135,40,2,0,4,1]],"find_edom":[[468,54,468,60,0,0,4,0],[468,54,468,60,0,0,4,1],[476,28,476,38,0,0,4,0],[476,28,476,38,0,0,4,1],[477,38,477,44,0,0,4,0],[477,38,477,44,0,0,4,1]],"pcapint_strcasecmp":[[3206,9,3206,31,0,0,4,0],[3207,7,3207,21,0,0,4,0],[3207,7,3207,21,0,0,4,1]],"opt_j":[[1691,6,1691,23,0,0,4,0],[1691,6,1691,23,0,0,4,1],[1699,6,1699,24,0,0,4,0],[1699,6,1699,24,0,0,4,1],[1716,7,1716,44,0,0,4,0],[1738,14,1738,38,0,0,4,0],[1738,14,1738,38,0,0,4,1],[1742,10,1742,16,0,0,4,0],[1742,10,1742,16,0,0,4,1],[1761,8,1761,19,0,0,4,0],[1761,8,1761,19,0,0,4,1],[1761,23,1761,54,0,0,4,0],[1773,9,1773,24,0,0,4,0],[1773,9,1773,24,0,0,4,1]],"opt_stmt":[[1179,10,1179,17,0,0,4,0],[1179,10,1179,17,0,0,4,1],[1181,2,1181,27,0,0,4,0],[1181,2,1181,27,0,0,4,1],[1182,2,1182,27,0,0,4,0],[1182,2,1182,27,0,0,4,1],[1183,2,1183,27,0,0,4,0],[1183,2,1183,27,0,0,4,1],[1188,2,1188,27,0,0,4,1],[1189,2,1189,27,0,0,4,0],[1189,2,1189,27,0,0,4,1],[1190,2,1190,27,0,0,4,0],[1190,2,1190,27,0,0,4,1],[1192,7,1192,12,0,0,4,0],[1192,7,1192,12,0,0,4,1],[1192,16,1192,43,0,0,4,1],[1207,2,1207,21,0,0,4,1],[1212,2,1212,21,0,0,4,0],[1212,2,1212,21,0,0,4,1],[1217,2,1217,22,0,0,4,1],[1222,2,1222,28,0,0,4,0],[1222,2,1222,28,0,0,4,1],[1227,2,1227,22,0,0,4,1],[1253,2,1253,28,0,0,4,0],[1253,2,1253,28,0,0,4,1],[1254,2,1254,28,0,0,4,1],[1255,2,1255,28,0,0,4,1],[1256,2,1256,28,0,0,4,1],[1257,2,1257,28,0,0,4,1],[1258,2,1258,28,0,0,4,0],[1258,2,1258,28,0,0,4,1],[1259,2,1259,27,0,0,4,1],[1260,2,1260,28,0,0,4,1],[1261,2,1261,28,0,0,4,0],[1261,2,1261,28,0,0,4,1],[1262,2,1262,28,0,0,4,1],[1264,7,1264,12,0,0,4,0],[1264,7,1264,12,0,0,4,1],[1265,8,1265,17,0,0,4,1],[1295,8,1295,45,0,0,4,1],[1304,2,1304,28,0,0,4,0],[1304,2,1304,28,0,0,4,1],[1305,2,1305,28,0,0,4,1],[1306,2,1306,28,0,0,4,1],[1307,2,1307,28,0,0,4,1],[1308,2,1308,28,0,0,4,1],[1309,2,1309,28,0,0,4,1],[1310,2,1310,27,0,0,4,1],[1311,2,1311,28,0,0,4,1],[1312,2,1312,28,0,0,4,1],[1313,2,1313,28,0,0,4,1],[1315,7,1315,12,0,0,4,0],[1315,7,1315,12,0,0,4,1],[1315,16,1315,53,0,0,4,1],[1344,7,1344,12,0,0,4,0],[1344,7,1344,12,0,0,4,1],[1344,16,1344,53,0,0,4,1],[1366,2,1366,23,0,0,4,1],[1370,2,1370,21,0,0,4,1],[1384,2,1384,23,0,0,4,0],[1384,2,1384,23,0,0,4,1],[1388,2,1388,22,0,0,4,0],[1388,2,1388,22,0,0,4,1],[1390,7,1390,12,0,0,4,0],[1390,7,1390,12,0,0,4,1],[1390,16,1390,43,0,0,4,1],[1402,2,1402,13,0,0,4,0],[1402,2,1402,13,0,0,4,1],[1406,2,1406,14,0,0,4,1]],"opt_peep":[[885,6,885,12,0,0,4,0],[885,6,885,12,0,0,4,1],[894,7,894,13,0,0,4,0],[894,7,894,13,0,0,4,1],[902,7,902,16,0,0,4,0],[902,7,902,16,0,0,4,1],[910,7,910,26,0,0,4,0],[910,7,910,26,0,0,4,1],[911,7,911,40,0,0,4,1],[924,7,924,36,0,0,4,1],[938,7,938,36,0,0,4,1],[1025,6,1025,42,0,0,4,0],[1025,6,1025,42,0,0,4,1],[1026,6,1026,15,0,0,4,0],[1031,7,1031,46,0,0,4,1],[1075,12,1075,51,0,0,4,1],[1091,12,1091,51,0,0,4,0],[1091,12,1091,51,0,0,4,1],[1092,7,1092,18,0,0,4,1],[1108,6,1108,43,0,0,4,0],[1108,6,1108,43,0,0,4,1],[1109,7,1109,18,0,0,4,1],[1111,7,1111,28,0,0,4,1],[1120,6,1120,35,0,0,4,1],[1130,6,1130,35,0,0,4,0],[1130,6,1130,35,0,0,4,1],[1130,39,1130,66,0,0,4,0],[1134,3,1134,15,0,0,4,0],[1138,3,1138,15,0,0,4,1],[1142,3,1142,15,0,0,4,1],[1146,3,1146,16,0,0,4,1],[1150,3,1150,10,0,0,4,1],[1153,7,1153,18,0,0,4,0],[1153,7,1153,18,0,0,4,1],[1160,7,1160,8,0,0,4,0],[1160,7,1160,8,0,0,4,1]],"opt_loop":[[2203,7,2203,22,0,0,4,0],[2203,7,2203,22,0,0,4,1],[2215,7,2215,47,0,0,4,0],[2215,7,2215,47,0,0,4,1],[2229,8,2229,25,0,0,4,1]],"make_marks":[[2286,6,2286,15,0,0,4,0],[2286,6,2286,15,0,0,4,1],[2288,7,2288,38,0,0,4,0],[2288,7,2288,38,0,0,4,1]],"pcap_set_immediate_mode":[[2677,6,2677,32,0,0,4,0]],"bpf_dump":[[39,6,39,16,0,0,4,1],[47,6,47,16,0,0,4,1],[53,14,53,19,0,0,4,0],[53,14,53,19,0,0,4,1]],"atomuse":[[529,6,529,14,0,0,4,0],[529,6,529,14,0,0,4,1],[534,2,534,14,0,0,4,0],[534,2,534,14,0,0,4,1],[535,10,535,32,0,0,4,1],[536,4,536,26,0,0,4,1],[538,2,538,13,0,0,4,0],[538,2,538,13,0,0,4,1],[539,2,539,14,0,0,4,0],[539,2,539,14,0,0,4,1],[544,10,544,34,0,0,4,0],[544,10,544,34,0,0,4,1],[545,4,545,28,0,0,4,0],[545,4,545,28,0,0,4,1],[547,2,547,13,0,0,4,0],[547,2,547,13,0,0,4,1],[550,2,550,14,0,0,4,1],[553,2,553,14,0,0,4,0],[553,2,553,14,0,0,4,1],[554,2,554,14,0,0,4,0],[554,2,554,14,0,0,4,1],[555,7,555,26,0,0,4,0],[555,7,555,26,0,0,4,1],[559,2,559,15,0,0,4,0],[559,2,559,15,0,0,4,1],[560,10,560,34,0,0,4,1],[135,25,135,40,2,0,4,1]],"intern_blocks":[[2348,14,2348,37,0,0,4,0],[2348,14,2348,37,0,0,4,1],[2353,36,2353,42,0,0,4,0],[2353,36,2353,42,0,0,4,1],[2355,7,2355,16,0,0,4,0],[2355,7,2355,16,0,0,4,1],[2357,19,2357,42,0,0,4,0],[2357,19,2357,42,0,0,4,1],[2358,8,2358,17,0,0,4,0],[2358,8,2358,17,0,0,4,1],[2360,8,2360,58,0,0,4,0],[2360,8,2360,58,0,0,4,1],[2361,34,2361,60,0,0,4,0],[2361,34,2361,60,0,0,4,1],[2367,14,2367,37,0,0,4,0],[2367,14,2367,37,0,0,4,1],[2369,7,2369,17,0,0,4,0],[2369,7,2369,17,0,0,4,1],[2371,7,2371,18,0,0,4,0],[2371,7,2371,18,0,0,4,1],[2375,7,2375,18,0,0,4,0],[2375,7,2375,18,0,0,4,1],[2380,6,2380,12,0,0,4,0],[2380,6,2380,12,0,0,4,1]],"compute_local_ud":[[616,21,616,22,0,0,4,0],[616,21,616,22,0,0,4,1],[617,7,617,23,0,0,4,0],[617,7,617,23,0,0,4,1],[620,7,620,16,0,0,4,0],[620,7,620,16,0,0,4,1],[621,8,621,23,0,0,4,0],[621,8,621,23,0,0,4,1],[622,9,622,18,0,0,4,1],[624,9,624,18,0,0,4,1],[627,13,627,27,0,0,4,0],[628,9,628,18,0,0,4,0],[628,9,628,18,0,0,4,1],[635,7,635,16,0,0,4,0],[636,8,636,17,0,0,4,0],[641,6,641,37,0,0,4,0],[641,6,641,37,0,0,4,1],[646,7,646,16,0,0,4,0],[647,8,647,23,0,0,4,1],[653,13,653,27,0,0,4,0],[654,9,654,18,0,0,4,1]],"convert_code_r":[[2717,7,2717,25,0,0,4,0]],"pcap_compile":[[840,6,840,14,0,0,4,0],[840,18,840,37,0,0,4,0],[840,18,840,37,0,0,4,1],[841,7,841,48,0,0,4,1],[846,7,846,29,0,0,4,1],[847,8,847,49,0,0,4,0],[847,8,847,49,0,0,4,1],[847,53,847,77,0,0,4,0]],"eq_slist":[[2314,10,2314,11,0,0,4,0],[2314,10,2314,11,0,0,4,1],[2314,15,2314,31,0,0,4,0],[2314,15,2314,31,0,0,4,1],[2316,10,2316,11,0,0,4,0],[2316,10,2316,11,0,0,4,1],[2316,15,2316,31,0,0,4,0],[2316,15,2316,31,0,0,4,1],[2318,7,2318,13,0,0,4,0],[2318,7,2318,13,0,0,4,1],[2320,7,2320,13,0,0,4,1],[2322,7,2322,29,0,0,4,0],[2322,7,2322,29,0,0,4,1],[2322,33,2322,49,0,0,4,1]],"use_conflict":[[1582,6,1582,14,0,0,4,0],[1582,6,1582,14,0,0,4,1],[1585,17,1585,31,0,0,4,0],[1585,17,1585,31,0,0,4,1],[1587,8,1587,39,0,0,4,1],[236,24,236,41,1,0,4,0],[236,24,236,41,1,0,4,1]],"find_ud":[[681,21,681,27,0,0,4,0],[681,21,681,27,0,0,4,1],[682,34,682,35,0,0,4,0],[682,34,682,35,0,0,4,1],[687,14,687,27,0,0,4,0],[687,14,687,27,0,0,4,1],[688,34,688,35,0,0,4,0],[688,34,688,35,0,0,4,1]],"opt_deadstores":[[1449,21,1449,27,0,0,4,0],[1449,21,1449,27,0,0,4,1],[1453,17,1453,31,0,0,4,0],[1453,17,1453,31,0,0,4,1],[1454,7,1454,17,0,0,4,0],[1454,7,1454,17,0,0,4,1],[1454,21,1454,30,0,0,4,0],[1454,21,1454,30,0,0,4,1]],"deadstmt":[[1418,6,1418,15,0,0,4,0],[1418,6,1418,15,0,0,4,1],[1419,7,1419,22,0,0,4,0],[1419,7,1419,22,0,0,4,1],[1427,6,1427,15,0,0,4,0],[1427,6,1427,15,0,0,4,1],[1428,7,1428,17,0,0,4,1]],"opt_init":[[2520,6,2520,31,0,0,4,1],[2529,6,2529,30,0,0,4,1],[2533,6,2533,53,0,0,4,1],[2540,6,2540,30,0,0,4,1],[2548,6,2548,31,0,0,4,1],[2561,6,2561,61,0,0,4,1],[2575,6,2575,64,0,0,4,1],[2585,6,2585,60,0,0,4,1],[2594,6,2594,57,0,0,4,1],[2602,6,2602,45,0,0,4,1],[2608,6,2608,30,0,0,4,1],[2613,14,2613,19,0,0,4,0],[2613,14,2613,19,0,0,4,1],[2618,14,2618,19,0,0,4,0],[2618,14,2618,19,0,0,4,1],[2623,14,2623,19,0,0,4,0],[2623,14,2623,19,0,0,4,1],[2638,14,2638,19,0,0,4,0],[2638,14,2638,19,0,0,4,1],[2647,6,2647,29,0,0,4,1],[2651,6,2651,35,0,0,4,1]],"opt_blk":[[1484,6,1484,12,0,0,4,0],[1484,6,1484,12,0,0,4,1],[1506,10,1506,31,0,0,4,0],[1506,10,1506,31,0,0,4,1],[1507,16,1507,27,0,0,4,0],[1507,16,1507,27,0,0,4,1],[1508,9,1508,37,0,0,4,0],[1508,9,1508,37,0,0,4,1],[1514,21,1514,22,0,0,4,0],[1514,21,1514,22,0,0,4,1],[1543,6,1543,14,0,0,4,0],[1543,6,1543,14,0,0,4,1],[1544,8,1544,23,0,0,4,0],[1544,8,1544,23,0,0,4,1],[1545,8,1545,27,0,0,4,0],[1545,8,1545,27,0,0,4,1],[1545,31,1545,53,0,0,4,0],[1545,31,1545,53,0,0,4,1],[1546,8,1546,27,0,0,4,1],[1547,7,1547,38,0,0,4,0],[1547,7,1547,38,0,0,4,1],[1548,7,1548,20,0,0,4,1],[1563,6,1563,33,0,0,4,0]],"find_inedges":[[2127,14,2127,37,0,0,4,0],[2127,14,2127,37,0,0,4,1],[2134,28,2134,37,0,0,4,0],[2134,28,2134,37,0,0,4,1],[2135,38,2135,44,0,0,4,0],[2135,38,2135,44,0,0,4,1]],"slength":[[2425,7,2425,23,0,0,4,1]],"pcap_lookupnet":[[1665,6,1665,46,0,0,4,0],[1667,7,1667,29,0,0,4,1]],"vstore":[[757,6,757,11,0,0,4,0],[757,6,757,11,0,0,4,1],[757,15,757,36,0,0,4,0],[757,40,757,55,0,0,4,0],[757,40,757,55,0,0,4,1]],"eq_blk":[[2332,6,2332,30,0,0,4,0],[2332,6,2332,30,0,0,4,1],[2333,6,2333,24,0,0,4,0],[2333,6,2333,24,0,0,4,1],[2334,6,2334,32,0,0,4,0],[2334,6,2334,32,0,0,4,1],[2335,6,2335,32,0,0,4,0],[2335,6,2335,32,0,0,4,1]],"pcap_minor_version":[[3518,6,3518,19,0,0,4,1]],"find_dom":[[420,9,420,15,0,0,4,0],[420,9,420,15,0,0,4,1],[425,33,425,39,0,0,4,0],[425,33,425,39,0,0,4,1],[431,28,431,38,0,0,4,0],[431,28,431,38,0,0,4,1],[432,38,432,39,0,0,4,0],[432,38,432,39,0,0,4,1],[434,8,434,18,0,0,4,0],[434,8,434,18,0,0,4,1],[288,28,288,37,3,0,4,1],[288,28,288,37,4,0,4,1]],"number_blks_r":[[2452,6,2452,12,0,0,4,0],[2452,6,2452,12,0,0,4,1],[2457,6,2457,30,0,0,4,1],[386,26,386,56,1,0,4,0],[386,26,386,56,1,0,4,1]],"find_levels_r":[[386,26,386,56,1,0,4,0],[386,26,386,56,1,0,4,1],[413,16,413,30,3,0,4,0],[413,16,413,30,3,0,4,1],[361,19,361,26,6,0,4,0],[361,19,361,26,6,0,4,1]],"or_pullup":[[1813,6,1813,13,0,0,4,0],[1813,6,1813,13,0,0,4,1],[1821,22,1821,29,0,0,4,0],[1821,22,1821,29,0,0,4,1],[1822,7,1822,35,0,0,4,0],[1822,7,1822,35,0,0,4,1],[1830,6,1830,32,0,0,4,0],[1830,6,1830,32,0,0,4,1],[1853,7,1853,18,0,0,4,1],[1863,7,1863,23,0,0,4,0],[1863,7,1863,23,0,0,4,1],[1872,7,1872,18,0,0,4,1],[1879,7,1879,35,0,0,4,0],[1879,7,1879,35,0,0,4,1],[1902,7,1902,18,0,0,4,1],[1909,7,1909,23,0,0,4,0],[1909,7,1909,23,0,0,4,1],[1918,7,1918,18,0,0,4,1],[1925,7,1925,35,0,0,4,1]],"pcap_datalink_name_to_val":[[3393,14,3393,41,0,0,4,0],[3394,7,3394,57,0,0,4,0],[3394,7,3394,57,0,0,4,1]],"find_closure":[[504,28,504,38,0,0,4,0],[504,28,504,38,0,0,4,1],[505,38,505,39,0,0,4,0],[505,38,505,39,0,0,4,1],[507,8,507,18,0,0,4,0],[507,8,507,18,0,0,4,1],[310,28,310,37,3,0,4,1],[310,28,310,37,4,0,4,1]]},"library_calls":["pcap_fopen_offline_with_tstamp_precision","pcap_major_version","pcap_minor_version","pcap_close","pcap_compile","bpf_dump","pcap_freecode","pcap_lookupnet","pcap_datalink_name_to_val","bpf_filter","pcap_offline_filter","pcap_set_immediate_mode","pcap_dump_open","pcap_dump_ftell64","pcap_dump_close","pcap_close"],"critical_calls":["pcap_fopen_offline_with_tstamp_precision","pcap_major_version","pcap_minor_version","pcap_compile","bpf_dump","pcap_freecode","pcap_lookupnet","pcap_datalink_name_to_val","bpf_filter","pcap_offline_filter","pcap_set_immediate_mode","pcap_dump_open","pcap_dump_ftell64","pcap_dump_close","pcap_close"],"visited":6}
/**/


extern "C" int LLVMFuzzerTestOneInput_11(const uint8_t* data, size_t size) {
	if(size<0) return 0;

	FILE *input_file_ptr = fopen("input_file", "wb");
	if (input_file_ptr == NULL) {return 0;}
	fwrite(data, sizeof(uint8_t), size, input_file_ptr);
	fclose(input_file_ptr);

    // Step 4: Open input file
    FILE* in_file = fmemopen((void*)data, size, "rb");
    if (in_file == nullptr) {
        assert_file_closed(&in_file);
	return 0;
    }

    // Step 5: Get file descriptor from input file
    int in_fd = fuzz_fileno(in_file);

    // Step 6: Define file name for input file
    const char* input_file = "input_file";

    // Step 7: Declare pcap variables
    pcap_t* handle;
    char errbuf[PCAP_ERRBUF_SIZE];

    // Step 8: Open the pcap device
    handle = pcap_fopen_offline_with_tstamp_precision(in_file, PCAP_TSTAMP_PRECISION_MICRO, errbuf);
    if (handle == nullptr) {
        assert_file_closed(&in_file);;
        assert_file_closed(&in_file);
	assert_file_name_closed("input_file");
	assert_fd_closed(in_fd);
	return 0;
    }

    // Step 9: Get pcap major and minor versions
    int major_version = pcap_major_version(handle);
    int minor_version = pcap_minor_version(handle);

    // Step 10: Dump BPF program instructions to output file
    FILE* out_file = fopen("output_file", "wb");
    if (out_file == nullptr) {
        pcap_close(handle);
        assert_file_closed(&in_file);;
        assert_file_closed(&out_file);
	assert_file_closed(&in_file);
	assert_file_name_closed("input_file");
	assert_fd_closed(in_fd);
	return 0;
    }

    struct bpf_program program;
    pcap_compile(handle, &program, "port 80", 1, PCAP_NETMASK_UNKNOWN);
    bpf_dump(&program, 1);
    pcap_freecode(&program);

    // Step 11: Lookup network information
    bpf_u_int32 net, mask;
    char net_str[INET_ADDRSTRLEN], mask_str[INET_ADDRSTRLEN];
    pcap_lookupnet(input_file, &net, &mask, errbuf);
    inet_ntop(AF_INET, &net, net_str, INET_ADDRSTRLEN);
    inet_ntop(AF_INET, &mask, mask_str, INET_ADDRSTRLEN);

    // Step 12: Convert data link name to value
    int dlt_value = pcap_datalink_name_to_val("EN10MB");

    // Step 13: BPF filter data
    u_char packet[100];
    struct bpf_insn filter[1] = {{0x28, 0, 0, 0x0000000c}};
    bpf_u_int32 filter_length = sizeof(filter)/sizeof(struct bpf_insn);
    u_int result = bpf_filter(filter, packet, sizeof(packet), filter_length);

    // Step 14: Offline BPF filter
    struct pcap_pkthdr header;
    const u_char* packet_data;
    int offline_result = pcap_offline_filter(&program, &header, packet_data);

    // Step 15: Set immediate mode
    int immediate_mode_result = pcap_set_immediate_mode(handle, 1);

    // Step 16: Get current position in pcap dump file
    pcap_dumper_t* dumper = pcap_dump_open(handle, "dump_file");
    if (dumper != nullptr) {
        int64_t position = pcap_dump_ftell64(dumper);
        pcap_dump_close(dumper);
    }

    // Step 17: Close pcap handle
    pcap_close(handle);

    // Step 18: Close input and output files
    assert_file_closed(&in_file);;
    assert_file_closed(&out_file);;

    assert_file_closed(&out_file);
	assert_file_closed(&in_file);
	assert_file_name_closed("input_file");
	assert_fd_closed(in_fd);
	return 0;
}